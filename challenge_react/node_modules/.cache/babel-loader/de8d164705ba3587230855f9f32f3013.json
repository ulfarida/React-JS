{"ast":null,"code":"import createStore from 'unistore';\nimport axios from 'axios';\nconst initialState = {\n  username: '',\n  password: '',\n  email: '',\n  token: '',\n  auth: false,\n  listNews: [],\n  isLoading: true,\n  category: 'general',\n  search: ''\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  setInput: (state, event) => {\n    store.setState({\n      [event.target.name]: event.target.value\n    });\n  },\n  getNewsAxios: (state, paramCategory) => {\n    const apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\n    const baseUrl = \"https://newsapi.org/v2/\";\n    const urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n    axios.get(urlHeadline + '&q=' + paramCategory).then(function (response) {\n      store.setState({\n        listNews: response.data.articles,\n        isLoading: false\n      });\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      });\n    });\n  },\n  searchNews: async (state, keyword) => {\n    const apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\n    const baseUrl = \"https://newsapi.org/v2/\";\n    const urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n\n    if (keyword.length > 2) {\n      try {\n        const response = await axios.get(urlHeadline + '&q=' + keyword);\n        store.setState({\n          listNews: response.data.articles\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/home/alta7/Documents/Alterra Academy/React/Github React-JS/React-JS/challenge_react/src/store.js"],"names":["createStore","axios","initialState","username","password","email","token","auth","listNews","isLoading","category","search","store","actions","setInput","state","event","setState","target","name","value","getNewsAxios","paramCategory","apiKey","baseUrl","urlHeadline","get","then","response","data","articles","catch","error","searchNews","keyword","length","console"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,YAAY,GAAG;AACLC,EAAAA,QAAQ,EAAG,EADN;AAELC,EAAAA,QAAQ,EAAG,EAFN;AAGLC,EAAAA,KAAK,EAAG,EAHH;AAILC,EAAAA,KAAK,EAAG,EAJH;AAKLC,EAAAA,IAAI,EAAG,KALF;AAMLC,EAAAA,QAAQ,EAAG,EANN;AAOLC,EAAAA,SAAS,EAAG,IAPP;AAQLC,EAAAA,QAAQ,EAAG,SARN;AASLC,EAAAA,MAAM,EAAG;AATJ,CAArB;AAYA,OAAO,MAAMC,KAAK,GAAGZ,WAAW,CAACE,YAAD,CAAzB;AAEP,OAAO,MAAMW,OAAO,GAAGD,KAAK,KAAK;AAE7BE,EAAAA,QAAQ,EAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzBJ,IAAAA,KAAK,CAACK,QAAN,CAAe;AAAE,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAsBH,KAAK,CAACE,MAAN,CAAaE;AAArC,KAAf;AACH,GAJ4B;AAM7BC,EAAAA,YAAY,EAAG,CAACN,KAAD,EAAQO,aAAR,KAA0B;AACrC,UAAMC,MAAM,GAAG,kCAAf;AACA,UAAMC,OAAO,GAAG,yBAAhB;AACA,UAAMC,WAAW,GAAGD,OAAO,GAAG,gCAAV,GAA6CD,MAAjE;AACAtB,IAAAA,KAAK,CACAyB,GADL,CACSD,WAAW,GAAC,KAAZ,GAAkBH,aAD3B,EAEKK,IAFL,CAEU,UAASC,QAAT,EAAmB;AACrBhB,MAAAA,KAAK,CAACK,QAAN,CAAe;AAAET,QAAAA,QAAQ,EAAEoB,QAAQ,CAACC,IAAT,CAAcC,QAA1B;AAAoCrB,QAAAA,SAAS,EAAE;AAA/C,OAAf;AACH,KAJL,EAMKsB,KANL,CAMW,UAASC,KAAT,EAAgB;AACnBpB,MAAAA,KAAK,CAACK,QAAN,CAAe;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAf;AACH,KARL;AASH,GAnB4B;AAqB7BwB,EAAAA,UAAU,EAAG,OAAOlB,KAAP,EAAcmB,OAAd,KAA0B;AACnC,UAAMX,MAAM,GAAG,kCAAf;AACA,UAAMC,OAAO,GAAG,yBAAhB;AACA,UAAMC,WAAW,GAAGD,OAAO,GAAG,gCAAV,GAA6CD,MAAjE;;AACA,QAAIW,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;AACtB,UAAI;AACF,cAAMP,QAAQ,GAAG,MAAM3B,KAAK,CAACyB,GAAN,CAAUD,WAAW,GAAC,KAAZ,GAAkBS,OAA5B,CAAvB;AACAtB,QAAAA,KAAK,CAACK,QAAN,CAAe;AAAET,UAAAA,QAAQ,EAAEoB,QAAQ,CAACC,IAAT,CAAcC;AAA1B,SAAf;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdI,QAAAA,OAAO,CAACJ,KAAR,CAAcA,KAAd;AACD;AACF;AACJ;AAjC4B,CAAL,CAArB","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios'\n\n\nconst initialState = { \n                username : '',\n                password : '',\n                email : '',\n                token : '',\n                auth : false,\n                listNews : [],\n                isLoading : true,\n                category : 'general',\n                search : ''\n                };\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    \n    setInput : (state, event) => {\n        store.setState({ [event.target.name] : event.target.value })\n    },\n\n    getNewsAxios : (state, paramCategory) => {\n        const apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\n        const baseUrl = \"https://newsapi.org/v2/\";\n        const urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n        axios\n            .get(urlHeadline+'&q='+paramCategory)\n            .then(function(response) {\n                store.setState({ listNews: response.data.articles, isLoading: false})\n            })\n\n            .catch(function(error) {\n                store.setState({ isLoading: false })\n            })\n    },\n\n    searchNews : async (state, keyword) => {\n        const apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\n        const baseUrl = \"https://newsapi.org/v2/\";\n        const urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n        if (keyword.length > 2) {\n          try {\n            const response = await axios.get(urlHeadline+'&q='+keyword);\n            store.setState({ listNews: response.data.articles });\n          } catch (error) {\n            console.error(error);\n          }\n        }\n    }\n    \n})"]},"metadata":{},"sourceType":"module"}