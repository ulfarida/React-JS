{"ast":null,"code":"var _jsxFileName = \"/home/alta7/Documents/Alterra Academy/React/Github React-JS/React-JS/challenge_react/src/pages/news.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ListArticle from '../components/listArticle';\nimport Header from '../components/header';\nimport TopNews from '../components/topNews';\nconst apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\nconst baseUrl = \"https://newsapi.org/v2/\";\nconst urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n\nclass News extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      listNews: [],\n      isLoading: true,\n      category: 'general'\n    };\n\n    this.setCategory = value => {\n      const self = this;\n      self.setState({\n        category: value\n      });\n      this.getNews(value);\n    };\n\n    this.getNews = category => {\n      const self = this;\n      self.setState({\n        category: category.category\n      });\n      axios.get(urlHeadline + '&q=' + category.category).then(function (response) {\n        self.setState({\n          listNews: response.data.articles,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        self.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      const self = this;\n      return this.getNews(self.state.category);\n    };\n  }\n\n  // componentWillReceiveProps = (props) => {\n  //     const self = this;\n  //     return this.getNews(props)\n  // }\n  render() {\n    const _this$state = this.state,\n          listNews = _this$state.listNews,\n          isLoading = _this$state.isLoading;\n    const topHeadlines = listNews.filter(item => {\n      if (item.content !== null && item.image !== null) {\n        return item;\n      }\n\n      return false;\n    });\n    const headlineNews = topHeadlines.map((item, key) => {\n      return React.createElement(ListArticle, {\n        key: key,\n        title: item.title,\n        img: item.urlToImage,\n        content: item.description,\n        url: item.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      setCategory: this.setCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 list-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TopNews, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-8 list-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, isLoading ? React.createElement(\"div\", {\n      className: \"loading text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Loading...\") : headlineNews))));\n  }\n\n}\n\nexport default News;","map":{"version":3,"sources":["/home/alta7/Documents/Alterra Academy/React/Github React-JS/React-JS/challenge_react/src/pages/news.jsx"],"names":["React","Component","axios","ListArticle","Header","TopNews","apiKey","baseUrl","urlHeadline","News","state","listNews","isLoading","category","setCategory","value","self","setState","getNews","get","then","response","data","articles","catch","error","componentDidMount","render","topHeadlines","filter","item","content","image","headlineNews","map","key","title","urlToImage","description","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport ListArticle from '../components/listArticle'\nimport Header from '../components/header'\nimport TopNews from '../components/topNews'\n\nconst apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\nconst baseUrl = \"https://newsapi.org/v2/\";\nconst urlHeadline = baseUrl + \"everything?language=en&apiKey=\" + apiKey;\n\nclass News extends Component {\n    state = {\n        listNews : [],\n        isLoading : true,\n        category : 'general'\n    };\n\n    setCategory = (value) => {\n        const self = this;\n        self.setState({category : value})\n        this.getNews(value)\n    }\n\n    getNews = (category) => {\n        const self = this;\n        self.setState({category : category.category})\n        axios\n            .get(urlHeadline+'&q='+category.category)\n            .then(function(response) {\n                self.setState({ listNews: response.data.articles, isLoading: false})\n            })\n\n            .catch(function(error) {\n                self.setState({ isLoading: false })\n            })\n    }\n\n    componentDidMount = () => {\n        const self = this;\n        return this.getNews(self.state.category)\n    };\n\n    // componentWillReceiveProps = (props) => {\n    //     const self = this;\n    //     return this.getNews(props)\n    // }\n\n    render () {\n        const { listNews, isLoading } = this.state;\n        const topHeadlines = listNews.filter(item => {\n            if (item.content !== null && item.image !== null) {\n                return item;\n            }\n            return false;\n        })\n\n        const headlineNews = topHeadlines.map((item, key) => {\n            return (\n                <ListArticle \n                    key={key} \n                    title={item.title} \n                    img={item.urlToImage} \n                    content={item.description}\n                    url={item.url} />\n            );\n        });\n\n        return (\n            <div>\n                <Header setCategory={this.setCategory}></Header>\n                <div className=\"container\">\n                    <div className=\"row content\">\n                        <div className=\"col-md-4 list-news\">\n                            <TopNews/>\n                        </div>\n                        <div className=\"col-md-8 list-news\">\n                            { isLoading ? <div className=\"loading text-center\">Loading...</div> : headlineNews }\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default News;"]},"metadata":{},"sourceType":"module"}