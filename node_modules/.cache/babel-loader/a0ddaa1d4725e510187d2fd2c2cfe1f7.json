{"ast":null,"code":"import _defineProperty from\"/home/alta7/Documents/Alterra Academy/React/React-JS/node_modules/@babel/runtime/helpers/esm/defineProperty\";import createStore from'unistore';import axios from'axios';var initialState={username:'',password:'',email:'',token:'',auth:false,listNews:[],isLoading:true,category:'other',search:''};export var store=createStore(initialState);export var actions=function actions(store){return{setInput:function setInput(state,event){store.setState(_defineProperty({},event.target.name,event.target.value));},getNewsAxios:function getNewsAxios(state,paramCategory,endPoint){var apiKey=\"58fecc904b4e40ef920ae5582000d89a\";var baseUrl=\"https://newsapi.org/v2/\";var urlHeadline=baseUrl+endPoint+\"?language=en&apiKey=\"+apiKey;axios.get(urlHeadline+'&q='+paramCategory).then(function(response){store.setState({listNews:response.data.articles,isLoading:false});}).catch(function(error){store.setState({isLoading:false});});}};};","map":{"version":3,"sources":["/home/alta7/Documents/Alterra Academy/React/React-JS/src/store.js"],"names":["createStore","axios","initialState","username","password","email","token","auth","listNews","isLoading","category","search","store","actions","setInput","state","event","setState","target","name","value","getNewsAxios","paramCategory","endPoint","apiKey","baseUrl","urlHeadline","get","then","response","data","articles","catch","error"],"mappings":"yIAAA,MAAOA,CAAAA,WAAP,KAAwB,UAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACLC,QAAQ,CAAG,EADN,CAELC,QAAQ,CAAG,EAFN,CAGLC,KAAK,CAAG,EAHH,CAILC,KAAK,CAAG,EAJH,CAKLC,IAAI,CAAG,KALF,CAMLC,QAAQ,CAAG,EANN,CAOLC,SAAS,CAAG,IAPP,CAQLC,QAAQ,CAAG,OARN,CASLC,MAAM,CAAG,EATJ,CAArB,CAYA,MAAO,IAAMC,CAAAA,KAAK,CAAGZ,WAAW,CAACE,YAAD,CAAzB,CAEP,MAAO,IAAMW,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAD,KAAK,QAAK,CAC7BE,QAAQ,CAAG,kBAACC,KAAD,CAAQC,KAAR,CAAkB,CACzBJ,KAAK,CAACK,QAAN,oBAAkBD,KAAK,CAACE,MAAN,CAAaC,IAA/B,CAAuCH,KAAK,CAACE,MAAN,CAAaE,KAApD,GACH,CAH4B,CAK7BC,YAAY,CAAG,sBAACN,KAAD,CAAQO,aAAR,CAAuBC,QAAvB,CAAoC,CAC/C,GAAMC,CAAAA,MAAM,CAAG,kCAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,yBAAhB,CACA,GAAMC,CAAAA,WAAW,CAAGD,OAAO,CAAGF,QAAV,CAAqB,sBAArB,CAA8CC,MAAlE,CACAvB,KAAK,CACA0B,GADL,CACSD,WAAW,CAAC,KAAZ,CAAkBJ,aAD3B,EAEKM,IAFL,CAEU,SAASC,QAAT,CAAmB,CACrBjB,KAAK,CAACK,QAAN,CAAe,CAAET,QAAQ,CAAEqB,QAAQ,CAACC,IAAT,CAAcC,QAA1B,CAAoCtB,SAAS,CAAE,KAA/C,CAAf,EACH,CAJL,EAKKuB,KALL,CAKW,SAASC,KAAT,CAAgB,CACnBrB,KAAK,CAACK,QAAN,CAAe,CAAER,SAAS,CAAE,KAAb,CAAf,EACH,CAPL,EAQH,CAjB4B,CAAL,EAArB","sourcesContent":["import createStore from 'unistore';\nimport axios from 'axios'\n\nconst initialState = { \n                username : '',\n                password : '',\n                email : '',\n                token : '',\n                auth : false,\n                listNews : [],\n                isLoading : true,\n                category : 'other',\n                search : ''\n                };\n\nexport const store = createStore(initialState);\n\nexport const actions = store => ({\n    setInput : (state, event) => {\n        store.setState({ [event.target.name] : event.target.value })\n    },\n\n    getNewsAxios : (state, paramCategory, endPoint) => {\n        const apiKey = \"58fecc904b4e40ef920ae5582000d89a\";\n        const baseUrl = \"https://newsapi.org/v2/\";\n        const urlHeadline = baseUrl + endPoint + \"?language=en&apiKey=\" + apiKey;\n        axios\n            .get(urlHeadline+'&q='+paramCategory)\n            .then(function(response) {\n                store.setState({ listNews: response.data.articles, isLoading: false})\n            })\n            .catch(function(error) {\n                store.setState({ isLoading: false })\n            })\n    }\n    \n})"]},"metadata":{},"sourceType":"module"}